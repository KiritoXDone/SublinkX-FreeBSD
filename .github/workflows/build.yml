name: Build FreeBSD Binary

on:
  schedule:
    - cron: '0 0 */3 * *'  # Run at 00:00 every 3 days
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4 # 检出自己的仓库
      
    - uses: actions/checkout@v4 # 检出目标仓库到子目录
      with:
        repository: 'gooaclok819/sublinkX'
        path: 'sublinkX'
        fetch-depth: 1
        
    - name: Load last build commit
      id: last_build
      run: |
        echo "last_build=$(cat .last_build 2>/dev/null || echo '')" >> $GITHUB_OUTPUT
        
    - name: Check for new commits
      id: check
      run: |
        cd sublinkX
        CURRENT_COMMIT=$(git rev-parse HEAD)
        echo "current_commit=$CURRENT_COMMIT" >> $GITHUB_OUTPUT
        if [ "${{ steps.last_build.outputs.last_build }}" != "$CURRENT_COMMIT" ]; then
          echo "should_build=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Set up Go
      if: steps.check.outputs.should_build == 'true'
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Build FreeBSD binary
      if: steps.check.outputs.should_build == 'true'
      run: |
        cd sublinkX
        GOOS=freebsd GOARCH=amd64 go build -o ../sublinkX-freebsd-amd64 -ldflags="-s -w"
      
    - name: Create Release
      if: steps.check.outputs.should_build == 'true'
      uses: softprops/action-gh-release@v1
      with:
        files: sublinkX-freebsd-amd64
        tag_name: freebsd-${{ steps.check.outputs.current_commit }}
        name: FreeBSD Build ${{ steps.check.outputs.current_commit }}
        draft: false
        prerelease: false

    - name: Update last build commit
      if: steps.check.outputs.should_build == 'true'
      run: |
        echo "${{ steps.check.outputs.current_commit }}" > .last_build
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add .last_build
        git commit -m "Update last build commit"
        git push
